name: Deploy to GKE
on:
  push:
    branches:
      - test

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: mycluster
  GKE_ZONE: europe-west4-a  # cluster zone
  IMAGE: temperature-prediction-fastapi # image name
  IMAGE_TAG: latest # image tag
  AR_ZONE: europe-west4 # artifact registry zone
  AR_REPO: temperature-prediction # artifact registry repository

jobs:
  setup-build-push-deploy:
    name: Setup, Build, Push, and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      
      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          version: '>= 363.0.0'

      - name: Setup kubectl
        uses: azure/setup-kubectl@v4

      - name: Auth gcloud SDK
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GOOGLE_CLOUD_SERVICE_ACCOUNT_KEY }}'

      - name: Docker auth
        run: |-
          gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://$AR_ZONE-docker.pkg.dev

      # Get the GKE credentials so we can deploy to the cluster
      - name: Set up GKE credentials
        uses: 'google-github-actions/get-gke-credentials@v2'
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}

      # Build the Docker image
      - name: Build
        run: |-
          docker build \
            --tag "$AR_ZONE-docker.pkg.dev/$PROJECT_ID/$AR_REPO/$IMAGE:$IMAGE_TAG" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            --build-arg USER_NAME="nour" \
            --build-arg USER_ID=500 \
            .
      # Push the Docker image to Google Artifact Registry
      - name: Push
        run: |-
          docker push "$AR_ZONE-docker.pkg.dev/$PROJECT_ID/$AR_REPO/$IMAGE:$IMAGE_TAG"

      # Deploy the Docker image to the GKE cluster
      - name: Deploy
        run: |-
          kubectl get secrets gcr-creds || kubectl create secret docker-registry gcr-creds --docker-username=oauth2accesstoken --docker-password=$(gcloud auth print-access-token)
          kubectl apply -f kubernetes/fastapi
          kubectl get pods




   


